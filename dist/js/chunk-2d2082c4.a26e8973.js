(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2082c4"],{a450:function(e,n,i){"use strict";i.r(n);var t=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",[i("p",[e._v(" The for loop makes common repeated evaluation idioms easier to write. Since counting up and down like the above while loop does is so common, it can be expressed more concisely with a for loop: ")]),i("div",{staticClass:"card",staticStyle:{padding:"1em",margin:"15px 0"}},[i("b",[e._v("for i = 1:5 "),i("br"),e._v(" println(i) "),i("br"),e._v("end "),i("br")]),e._v("1 2 3 4 5 ")]),i("div",{staticClass:"card",staticStyle:{padding:"1em",margin:"15px 0"}},[i("b",[e._v("for i in [1,4,0] "),i("br"),e._v(" println(i) "),i("br"),e._v("end "),i("br")]),e._v("1 4 0 ")])])}],o={name:"For"},a=o,s=i("2877"),c=Object(s["a"])(a,t,r,!1,null,null,null);n["default"]=c.exports}}]);
//# sourceMappingURL=chunk-2d2082c4.a26e8973.js.map